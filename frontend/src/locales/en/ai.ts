export default {
  ai: {
    title: 'AI Assistant',
    chat: {
      title: 'Chat',
      placeholder: 'Ask me anything about trading strategy...',
    },
    strategy: {
      title: 'Strategy Generator',
      type: 'Strategy Type',
      pairs: 'Trading Pairs',
      timeframe: 'Timeframe',
      riskManagement: 'Risk Management',
      requirements: 'Additional Requirements',
      generate: 'Generate Strategy',
      generatedCode: 'Generated Strategy Code',
      requirementsPlaceholder: 'Enter any additional requirements or constraints for the strategy...',
      templates: {
        ma_crossover: {
          name: 'Moving Average Crossover',
          description: 'A strategy based on moving average crossover signals',
          parameters: {
            fastPeriod: 'Fast MA Period',
            slowPeriod: 'Slow MA Period',
          },
        },
        rsi_strategy: {
          name: 'RSI Strategy',
          description: 'A strategy based on RSI overbought/oversold signals',
          parameters: {
            rsiPeriod: 'RSI Period',
            overbought: 'Overbought Level',
            oversold: 'Oversold Level',
          },
        },
        bollinger_bands: {
          name: 'Bollinger Bands Strategy',
          description: 'A strategy based on Bollinger Bands breakout and mean reversion',
          parameters: {
            bbPeriod: 'BB Period',
            bbStdDev: 'BB Standard Deviation',
            meanReversionFactor: 'Mean Reversion Factor',
          },
        },
        macd_strategy: {
          name: 'MACD Strategy',
          description: 'A strategy based on MACD crossover and divergence signals',
          parameters: {
            fastEMA: 'Fast EMA Period',
            slowEMA: 'Slow EMA Period',
            signalPeriod: 'Signal Period',
            divergenceThreshold: 'Divergence Threshold',
          },
        },
      },
    },
    analysis: {
      title: 'Market Analysis',
      symbol: 'Trading Symbol',
      symbolPlaceholder: 'Select trading symbol',
      timeRange: 'Time Range',
      indicators: 'Technical Indicators',
      indicatorsPlaceholder: 'Select indicators',
      analyze: 'Analyze Market',
      signals: 'Trading Signals',
      indicator: 'Indicator',
      signal: 'Signal',
      strength: 'Signal Strength',
      description: 'Description',
      signals: {
        buy: 'Buy',
        sell: 'Sell',
        hold: 'Hold',
      },
    },
    config: {
      title: 'AI Model Configuration',
      temperature: 'Temperature',
      temperatureTooltip: 'Controls randomness in the output (0-2)',
      topP: 'Top P',
      topPTooltip: 'Controls diversity via nucleus sampling (0-1)',
      maxTokens: 'Max Tokens',
      maxTokensTooltip: 'Maximum number of tokens to generate',
      presencePenalty: 'Presence Penalty',
      presencePenaltyTooltip: 'Penalizes new tokens based on their presence in the text (-2 to 2)',
      frequencyPenalty: 'Frequency Penalty',
      frequencyPenaltyTooltip: 'Penalizes new tokens based on their frequency in the text (-2 to 2)',
    },
    tuner: {
      title: 'Strategy Tuner',
      parameters: {
        stopLoss: 'Stop Loss',
        stopLossDesc: 'Stop loss percentage from entry price',
        takeProfit: 'Take Profit',
        takeProfitDesc: 'Take profit percentage from entry price',
      },
      start: 'Start Tuning',
      improvement: 'Performance Improvement',
      parameter: 'Parameter',
      value: 'Value',
      metric: 'Metric',
    },
    model: {
      title: 'AI Models',
      management: 'Model Management',
      name: 'Model Name',
      description: 'Description',
      capabilities: {
        code: 'Code Generation',
        codeShort: 'Code',
        analysis: 'Market Analysis',
        analysisShort: 'Analysis',
        optimization: 'Strategy Optimization',
        optimizationShort: 'Optimization',
      },
      add: 'Add Model',
      edit: 'Edit Model',
      delete: 'Delete Model',
      download: 'Download Model',
      temperature: 'Temperature',
      topP: 'Top P',
      maxTokens: 'Max Tokens',
    },
    predictor: {
      title: 'Strategy Performance Prediction',
      expectedReturn: 'Expected Return',
      sharpeRatio: 'Sharpe Ratio',
      maxDrawdown: 'Max Drawdown',
      winRate: 'Win Rate',
      profitFactor: 'Profit Factor',
      riskAnalysis: 'Risk Analysis',
      mitigation: 'Mitigation',
      marketSuitability: 'Market Suitability Analysis',
      condition: 'Market Condition',
      suitability: 'Suitability Score',
      description: 'Description',
      riskLevels: {
        low: 'Low Risk',
        medium: 'Medium Risk',
        high: 'High Risk',
      },
    },
    backtest: {
      title: 'Backtest Report',
      totalReturn: 'Total Return',
      annualizedReturn: 'Annualized Return',
      sharpeRatio: 'Sharpe Ratio',
      maxDrawdown: 'Max Drawdown',
      winRate: 'Win Rate',
      profitFactor: 'Profit Factor',
      totalTrades: 'Total Trades',
      averageTrade: 'Average Trade',
      averageWin: 'Average Win',
      averageLoss: 'Average Loss',
      bestTrade: 'Best Trade',
      worstTrade: 'Worst Trade',
      averageHoldingTime: 'Avg Holding Time',
      equityCurve: 'Equity Curve',
      drawdownCurve: 'Drawdown Curve',
      trades: 'Trades',
      equity: 'Equity',
      drawdown: 'Drawdown',
      type: 'Type',
      buy: 'Buy',
      sell: 'Sell',
      entryTime: 'Entry Time',
      exitTime: 'Exit Time',
      entryPrice: 'Entry Price',
      exitPrice: 'Exit Price',
      pnl: 'P&L',
      pnlPercent: 'P&L %',
    },
    comparison: {
      title: 'Strategy Comparison',
      strategy: 'Strategy',
      return: 'Total Return',
      sharpe: 'Sharpe Ratio',
      drawdown: 'Max Drawdown',
      winRate: 'Win Rate',
      trades: 'Total Trades',
      parameters: 'Parameters',
      equity: 'Equity Curve',
      returns: 'Returns',
      bestPerformer: 'Best Performer',
      worstPerformer: 'Worst Performer',
      performance: {
        excellent: 'Excellent',
        good: 'Good',
        fair: 'Fair',
        poor: 'Poor',
      },
    },
    adaptability: {
      title: 'Market Adaptability Analysis',
      overallScore: 'Overall Adaptability Score',
      marketConditions: 'Market Conditions',
      marketFactors: 'Market Factors',
      recommendations: 'Recommendations',
      factor: 'Factor',
      impact: 'Impact',
      strength: 'Strength',
      description: 'Description',
      impacts: {
        positive: 'Positive',
        negative: 'Negative',
        neutral: 'Neutral',
      },
      conditions: {
        trending: 'Trending Market',
        ranging: 'Ranging Market',
        volatile: 'Volatile Market',
        stable: 'Stable Market',
      },
    },
    optimization: {
      suggestions: 'Optimization Suggestions',
      parameters: 'Parameter Optimization',
      logic: 'Logic Optimization',
      risks: 'Risk Management',
      issues: 'Issues',
      current: 'Current',
      suggested: 'Suggested',
      apply: 'Apply',
      complexity: 'Implementation Complexity',
      impact: 'Expected Impact',
      complexityLevels: {
        low: 'Low Complexity',
        medium: 'Medium Complexity',
        high: 'High Complexity',
      },
      severityLevels: {
        low: 'Low Severity',
        medium: 'Medium Severity',
        high: 'High Severity',
      },
    },
    sensitivity: {
      title: 'Parameter Sensitivity Analysis',
      parameter: 'Parameter',
      sensitivity: 'Sensitivity',
      impact: 'Impact Level',
      range: 'Test Range',
      impacts: {
        high: 'High Impact',
        medium: 'Medium Impact',
        low: 'Low Impact',
      },
      metrics: {
        returns: 'Returns',
        sharpe: 'Sharpe Ratio',
        drawdown: 'Max Drawdown',
      },
      description: {
        high: 'Small changes have large effects',
        medium: 'Moderate influence on performance',
        low: 'Relatively stable performance',
      },
    },
    monitor: {
      title: 'Real-Time Monitor',
      status: {
        running: 'Running',
        stopped: 'Stopped',
        lastUpdate: 'Last Update',
        stopStrategy: 'Stop Strategy',
      },
      performance: {
        todayReturn: 'Today Return',
        trades: 'Trades',
        equity: 'Account Equity',
        balance: 'Available Balance',
      },
      risk: {
        drawdown: 'Current Drawdown',
        leverage: 'Leverage',
        marginLevel: 'Margin Level',
      },
      position: {
        title: 'Current Position',
        symbol: 'Trading Pair',
        size: 'Position Size',
        entryPrice: 'Entry Price',
        unrealizedPnl: 'Unrealized P&L',
      },
      alerts: {
        title: 'Alert Messages',
        acknowledge: 'Acknowledge',
        types: {
          success: 'Success',
          info: 'Information',
          warning: 'Warning',
          error: 'Error',
        },
      },
    },
    ide: {
      title: 'Strategy Development',
      new: 'New File',
      open: 'Open File',
      save: 'Save',
      run: 'Run Strategy',
      debug: 'Debug',
      output: 'Output Console',
      template: {
        title: 'Strategy Template',
        basic: 'Basic Strategy',
        advanced: 'Advanced Strategy',
        custom: 'Custom Template',
      },
      settings: {
        title: 'Editor Settings',
        theme: 'Theme',
        fontSize: 'Font Size',
        tabSize: 'Tab Size',
        lineNumbers: 'Line Numbers',
        minimap: 'Minimap',
      },
      debug: {
        start: 'Start Debugging',
        stop: 'Stop Debugging',
        stepOver: 'Step Over',
        stepInto: 'Step Into',
        stepOut: 'Step Out',
        continue: 'Continue',
        breakpoint: 'Toggle Breakpoint',
      },
    },
  },
}; 