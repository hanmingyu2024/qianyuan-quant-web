name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3  # 使用最新的 actions/checkout
    - name: Set up Python
      uses: actions/setup-python@v3  # 使用最新的 actions/setup-python
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # 修改路径
        pip install pytest pytest-cov
        
    - name: Run tests
      run: |
        pytest backend/tests/ --cov=backend --cov-report=xml  # 生成 xml 格式的覆盖率报告
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v2  # 使用最新的 codecov-action

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3  # 使用最新的 actions/checkout
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  # 使用最新的 docker/setup-buildx-action
      
    - name: Login to DockerHub
      uses: docker/login-action@v2  # 使用最新的 docker/login-action
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Backend
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: user/quant-backend:latest
        
    - name: Build and push Frontend
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        push: true
        tags: user/quant-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3  # 使用最新的 actions/checkout
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1  # AWS凭证配置
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1
        
    - name: Update EKS kubeconfig
      run: aws eks update-kubeconfig --name quant-cluster
      
    - name: Deploy to EKS
      run: |
        kubectl apply -f infra/k8s/  # 确保此路径下有 Kubernetes 配置文件
        kubectl rollout restart deployment backend-deployment
        kubectl rollout restart deployment frontend-deployment

